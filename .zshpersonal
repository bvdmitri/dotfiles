
export VISUAL=nvim
export VIMCONFIG=~/.config/nvim
export VIMDATA=~/.local/share/nvim
export PATH="${HOME}/.local/bin:$PATH"

alias v=nvim
alias vi=nvim
alias vim=nvim
alias j=jump

alias nlspjuliaup="julia --project=~/.julia/environments/nvim-lspconfig -e 'using Pkg; Pkg.update()'"

export NVM_DIR="$HOME/.nvm"

PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"${HOME}/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"; export PERL_MM_OPT;

function nvm() {
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    echo "NVM has been lazy loaded in the current session, please run the command again."
}

export SDKMAN_DIR="${HOME}/.sdkman"

function sdk() {
    #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
    [[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"
    echo "SDK has been lazy loaded in the current session, please run the command again."
}

if [ -n "$VIMRUNTIME" ]; then 
    export PS1="$PS1%{(vim)%{:%{ "
    export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
    alias v='echo "Nested NVIM sessions are not allowed"'
    alias vi='echo "Nested NVIM sessions are not allowed"'
    alias vim='echo "Nested NVIM sessions are not allowed"'
    alias nvim='echo "Nested NVIM sessions are not allowed"'
fi

test -e "${HOME}/.docker/init-zsh.sh" && source "${HOME}/.docker/init-zsh.sh"
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
test -e "${HOME}/.miniconda3" && export PATH="${HOME}/.miniconda3/bin:$PATH"

